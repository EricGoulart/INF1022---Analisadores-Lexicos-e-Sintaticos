
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaDPAREN ELSE ENQUANTO EPAREN EVAL EXECUTE FACA FIM ID IF IGUAL INICIO MONITOR MULT NUMERO SOMA TERMINO THEN VIRGULA ZEROprograma : INICIO varlist MONITOR monitorados EXECUTE cmds TERMINOmonitorados : varlistvarlist : ID VIRGULA varlist \n                   | IDcmds : cmd cmds \n                | cmdcmd : while \n               | if \n               | ifelse \n               | eval \n               | zero\n               | soma\n               | mult\n               | atrwhile : ENQUANTO ID FACA cmds FIMif : IF ID THEN cmds FIMifelse : IF ID THEN cmds ELSE cmds FIMeval : EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPARENzero : ZERO EPAREN ID DPARENsoma : ID SOMA expr\n                | NUMERO SOMA exprmult : ID MULT expr\n                | NUMERO MULT exprexpr : ID\n                | NUMERO\n                | soma\n                | multatr : ID IGUAL expr'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,27,],[0,-1,]),'ID':([2,5,6,10,12,13,14,15,16,17,18,19,20,21,23,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,53,54,55,56,57,60,61,63,],[4,4,4,22,22,-7,-8,-9,-10,-11,-12,-13,-14,29,33,39,39,39,47,48,39,39,22,-24,-20,-25,-26,-27,-22,-28,22,-21,-23,58,-19,-15,-16,22,22,-17,-18,]),'MONITOR':([3,4,9,],[5,-4,-3,]),'VIRGULA':([4,47,58,],[6,53,60,]),'EXECUTE':([4,7,8,9,],[-4,-2,10,-3,]),'ENQUANTO':([10,12,13,14,15,16,17,18,19,20,38,39,40,41,42,43,44,45,46,49,50,54,55,56,57,60,61,63,],[21,21,-7,-8,-9,-10,-11,-12,-13,-14,21,-24,-20,-25,-26,-27,-22,-28,21,-21,-23,-19,-15,-16,21,21,-17,-18,]),'IF':([10,12,13,14,15,16,17,18,19,20,38,39,40,41,42,43,44,45,46,49,50,54,55,56,57,60,61,63,],[23,23,-7,-8,-9,-10,-11,-12,-13,-14,23,-24,-20,-25,-26,-27,-22,-28,23,-21,-23,-19,-15,-16,23,23,-17,-18,]),'EVAL':([10,12,13,14,15,16,17,18,19,20,38,39,40,41,42,43,44,45,46,49,50,54,55,56,57,60,61,63,],[24,24,-7,-8,-9,-10,-11,-12,-13,-14,24,-24,-20,-25,-26,-27,-22,-28,24,-21,-23,-19,-15,-16,24,24,-17,-18,]),'ZERO':([10,12,13,14,15,16,17,18,19,20,38,39,40,41,42,43,44,45,46,49,50,54,55,56,57,60,61,63,],[25,25,-7,-8,-9,-10,-11,-12,-13,-14,25,-24,-20,-25,-26,-27,-22,-28,25,-21,-23,-19,-15,-16,25,25,-17,-18,]),'NUMERO':([10,12,13,14,15,16,17,18,19,20,30,31,32,36,37,38,39,40,41,42,43,44,45,46,49,50,54,55,56,57,60,61,63,],[26,26,-7,-8,-9,-10,-11,-12,-13,-14,41,41,41,41,41,26,-24,-20,-25,-26,-27,-22,-28,26,-21,-23,-19,-15,-16,26,26,-17,-18,]),'TERMINO':([11,12,13,14,15,16,17,18,19,20,28,39,40,41,42,43,44,45,49,50,54,55,56,61,63,],[27,-6,-7,-8,-9,-10,-11,-12,-13,-14,-5,-24,-20,-25,-26,-27,-22,-28,-21,-23,-19,-15,-16,-17,-18,]),'FIM':([12,13,14,15,16,17,18,19,20,28,39,40,41,42,43,44,45,49,50,51,52,54,55,56,59,61,63,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-5,-24,-20,-25,-26,-27,-22,-28,-21,-23,55,56,-19,-15,-16,61,-17,-18,]),'ELSE':([12,13,14,15,16,17,18,19,20,28,39,40,41,42,43,44,45,49,50,52,54,55,56,61,63,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-5,-24,-20,-25,-26,-27,-22,-28,-21,-23,57,-19,-15,-16,-17,-18,]),'DPAREN':([12,13,14,15,16,17,18,19,20,28,39,40,41,42,43,44,45,48,49,50,54,55,56,61,62,63,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-5,-24,-20,-25,-26,-27,-22,-28,54,-21,-23,-19,-15,-16,-17,63,-18,]),'SOMA':([22,26,39,41,],[30,36,30,36,]),'MULT':([22,26,39,41,],[31,37,31,37,]),'IGUAL':([22,],[32,]),'EPAREN':([24,25,],[34,35,]),'FACA':([29,],[38,]),'THEN':([33,],[46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'varlist':([2,5,6,],[3,7,9,]),'monitorados':([5,],[8,]),'cmds':([10,12,38,46,57,60,],[11,28,51,52,59,62,]),'cmd':([10,12,38,46,57,60,],[12,12,12,12,12,12,]),'while':([10,12,38,46,57,60,],[13,13,13,13,13,13,]),'if':([10,12,38,46,57,60,],[14,14,14,14,14,14,]),'ifelse':([10,12,38,46,57,60,],[15,15,15,15,15,15,]),'eval':([10,12,38,46,57,60,],[16,16,16,16,16,16,]),'zero':([10,12,38,46,57,60,],[17,17,17,17,17,17,]),'soma':([10,12,30,31,32,36,37,38,46,57,60,],[18,18,42,42,42,42,42,18,18,18,18,]),'mult':([10,12,30,31,32,36,37,38,46,57,60,],[19,19,43,43,43,43,43,19,19,19,19,]),'atr':([10,12,38,46,57,60,],[20,20,20,20,20,20,]),'expr':([30,31,32,36,37,],[40,44,45,49,50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> INICIO varlist MONITOR monitorados EXECUTE cmds TERMINO','programa',7,'p_programa','main.py',72),
  ('monitorados -> varlist','monitorados',1,'p_monitorados','main.py',82),
  ('varlist -> ID VIRGULA varlist','varlist',3,'p_varlist','main.py',89),
  ('varlist -> ID','varlist',1,'p_varlist','main.py',90),
  ('cmds -> cmd cmds','cmds',2,'p_cmds','main.py',99),
  ('cmds -> cmd','cmds',1,'p_cmds','main.py',100),
  ('cmd -> while','cmd',1,'p_cmd','main.py',107),
  ('cmd -> if','cmd',1,'p_cmd','main.py',108),
  ('cmd -> ifelse','cmd',1,'p_cmd','main.py',109),
  ('cmd -> eval','cmd',1,'p_cmd','main.py',110),
  ('cmd -> zero','cmd',1,'p_cmd','main.py',111),
  ('cmd -> soma','cmd',1,'p_cmd','main.py',112),
  ('cmd -> mult','cmd',1,'p_cmd','main.py',113),
  ('cmd -> atr','cmd',1,'p_cmd','main.py',114),
  ('while -> ENQUANTO ID FACA cmds FIM','while',5,'p_while','main.py',118),
  ('if -> IF ID THEN cmds FIM','if',5,'p_if','main.py',123),
  ('ifelse -> IF ID THEN cmds ELSE cmds FIM','ifelse',7,'p_ifelse','main.py',128),
  ('eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN','eval',8,'p_eval','main.py',134),
  ('zero -> ZERO EPAREN ID DPAREN','zero',4,'p_zero','main.py',139),
  ('soma -> ID SOMA expr','soma',3,'p_soma','main.py',145),
  ('soma -> NUMERO SOMA expr','soma',3,'p_soma','main.py',146),
  ('mult -> ID MULT expr','mult',3,'p_mult','main.py',151),
  ('mult -> NUMERO MULT expr','mult',3,'p_mult','main.py',152),
  ('expr -> ID','expr',1,'p_expr','main.py',157),
  ('expr -> NUMERO','expr',1,'p_expr','main.py',158),
  ('expr -> soma','expr',1,'p_expr','main.py',159),
  ('expr -> mult','expr',1,'p_expr','main.py',160),
  ('atr -> ID IGUAL expr','atr',3,'p_atr','main.py',164),
]
