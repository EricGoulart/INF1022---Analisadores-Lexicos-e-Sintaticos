Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> INICIO varlist MONITOR monitorados EXECUTE cmds TERMINO
Rule 2     monitorados -> varlist
Rule 3     varlist -> ID VIRGULA varlist
Rule 4     varlist -> ID
Rule 5     cmds -> cmd cmds
Rule 6     cmds -> cmd
Rule 7     cmd -> while
Rule 8     cmd -> if
Rule 9     cmd -> ifelse
Rule 10    cmd -> eval
Rule 11    cmd -> zero
Rule 12    cmd -> soma
Rule 13    cmd -> mult
Rule 14    cmd -> atr
Rule 15    while -> ENQUANTO ID FACA cmds FIM
Rule 16    if -> IF ID THEN cmds FIM
Rule 17    ifelse -> IF ID THEN cmds ELSE cmds FIM
Rule 18    eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN
Rule 19    zero -> ZERO EPAREN ID DPAREN
Rule 20    soma -> ID SOMA expr
Rule 21    soma -> NUMERO SOMA expr
Rule 22    mult -> ID MULT expr
Rule 23    mult -> NUMERO MULT expr
Rule 24    expr -> ID
Rule 25    expr -> NUMERO
Rule 26    expr -> soma
Rule 27    expr -> mult
Rule 28    atr -> ID IGUAL expr

Terminals, with rules where they appear

DPAREN               : 18 19
ELSE                 : 17
ENQUANTO             : 15
EPAREN               : 18 19
EVAL                 : 18
EXECUTE              : 1
FACA                 : 15
FIM                  : 15 16 17
ID                   : 3 4 15 16 17 18 18 19 20 22 24 28
IF                   : 16 17
IGUAL                : 28
INICIO               : 1
MONITOR              : 1
MULT                 : 22 23
NUMERO               : 21 23 25
SOMA                 : 20 21
TERMINO              : 1
THEN                 : 16 17
VIRGULA              : 3 18 18
ZERO                 : 19
error                : 

Nonterminals, with rules where they appear

atr                  : 14
cmd                  : 5 6
cmds                 : 1 5 15 16 17 17 18
eval                 : 10
expr                 : 20 21 22 23 28
if                   : 8
ifelse               : 9
monitorados          : 1
mult                 : 13 27
programa             : 0
soma                 : 12 26
varlist              : 1 2 3
while                : 7
zero                 : 11

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . INICIO varlist MONITOR monitorados EXECUTE cmds TERMINO

    INICIO          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> INICIO . varlist MONITOR monitorados EXECUTE cmds TERMINO
    (3) varlist -> . ID VIRGULA varlist
    (4) varlist -> . ID

    ID              shift and go to state 4

    varlist                        shift and go to state 3

state 3

    (1) programa -> INICIO varlist . MONITOR monitorados EXECUTE cmds TERMINO

    MONITOR         shift and go to state 5


state 4

    (3) varlist -> ID . VIRGULA varlist
    (4) varlist -> ID .

    VIRGULA         shift and go to state 6
    MONITOR         reduce using rule 4 (varlist -> ID .)
    EXECUTE         reduce using rule 4 (varlist -> ID .)


state 5

    (1) programa -> INICIO varlist MONITOR . monitorados EXECUTE cmds TERMINO
    (2) monitorados -> . varlist
    (3) varlist -> . ID VIRGULA varlist
    (4) varlist -> . ID

    ID              shift and go to state 4

    varlist                        shift and go to state 7
    monitorados                    shift and go to state 8

state 6

    (3) varlist -> ID VIRGULA . varlist
    (3) varlist -> . ID VIRGULA varlist
    (4) varlist -> . ID

    ID              shift and go to state 4

    varlist                        shift and go to state 9

state 7

    (2) monitorados -> varlist .

    EXECUTE         reduce using rule 2 (monitorados -> varlist .)


state 8

    (1) programa -> INICIO varlist MONITOR monitorados . EXECUTE cmds TERMINO

    EXECUTE         shift and go to state 10


state 9

    (3) varlist -> ID VIRGULA varlist .

    MONITOR         reduce using rule 3 (varlist -> ID VIRGULA varlist .)
    EXECUTE         reduce using rule 3 (varlist -> ID VIRGULA varlist .)


state 10

    (1) programa -> INICIO varlist MONITOR monitorados EXECUTE . cmds TERMINO
    (5) cmds -> . cmd cmds
    (6) cmds -> . cmd
    (7) cmd -> . while
    (8) cmd -> . if
    (9) cmd -> . ifelse
    (10) cmd -> . eval
    (11) cmd -> . zero
    (12) cmd -> . soma
    (13) cmd -> . mult
    (14) cmd -> . atr
    (15) while -> . ENQUANTO ID FACA cmds FIM
    (16) if -> . IF ID THEN cmds FIM
    (17) ifelse -> . IF ID THEN cmds ELSE cmds FIM
    (18) eval -> . EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN
    (19) zero -> . ZERO EPAREN ID DPAREN
    (20) soma -> . ID SOMA expr
    (21) soma -> . NUMERO SOMA expr
    (22) mult -> . ID MULT expr
    (23) mult -> . NUMERO MULT expr
    (28) atr -> . ID IGUAL expr

    ENQUANTO        shift and go to state 21
    IF              shift and go to state 23
    EVAL            shift and go to state 24
    ZERO            shift and go to state 25
    ID              shift and go to state 22
    NUMERO          shift and go to state 26

    cmds                           shift and go to state 11
    cmd                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14
    ifelse                         shift and go to state 15
    eval                           shift and go to state 16
    zero                           shift and go to state 17
    soma                           shift and go to state 18
    mult                           shift and go to state 19
    atr                            shift and go to state 20

state 11

    (1) programa -> INICIO varlist MONITOR monitorados EXECUTE cmds . TERMINO

    TERMINO         shift and go to state 27


state 12

    (5) cmds -> cmd . cmds
    (6) cmds -> cmd .
    (5) cmds -> . cmd cmds
    (6) cmds -> . cmd
    (7) cmd -> . while
    (8) cmd -> . if
    (9) cmd -> . ifelse
    (10) cmd -> . eval
    (11) cmd -> . zero
    (12) cmd -> . soma
    (13) cmd -> . mult
    (14) cmd -> . atr
    (15) while -> . ENQUANTO ID FACA cmds FIM
    (16) if -> . IF ID THEN cmds FIM
    (17) ifelse -> . IF ID THEN cmds ELSE cmds FIM
    (18) eval -> . EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN
    (19) zero -> . ZERO EPAREN ID DPAREN
    (20) soma -> . ID SOMA expr
    (21) soma -> . NUMERO SOMA expr
    (22) mult -> . ID MULT expr
    (23) mult -> . NUMERO MULT expr
    (28) atr -> . ID IGUAL expr

    TERMINO         reduce using rule 6 (cmds -> cmd .)
    FIM             reduce using rule 6 (cmds -> cmd .)
    ELSE            reduce using rule 6 (cmds -> cmd .)
    DPAREN          reduce using rule 6 (cmds -> cmd .)
    ENQUANTO        shift and go to state 21
    IF              shift and go to state 23
    EVAL            shift and go to state 24
    ZERO            shift and go to state 25
    ID              shift and go to state 22
    NUMERO          shift and go to state 26

    cmd                            shift and go to state 12
    cmds                           shift and go to state 28
    while                          shift and go to state 13
    if                             shift and go to state 14
    ifelse                         shift and go to state 15
    eval                           shift and go to state 16
    zero                           shift and go to state 17
    soma                           shift and go to state 18
    mult                           shift and go to state 19
    atr                            shift and go to state 20

state 13

    (7) cmd -> while .

    ENQUANTO        reduce using rule 7 (cmd -> while .)
    IF              reduce using rule 7 (cmd -> while .)
    EVAL            reduce using rule 7 (cmd -> while .)
    ZERO            reduce using rule 7 (cmd -> while .)
    ID              reduce using rule 7 (cmd -> while .)
    NUMERO          reduce using rule 7 (cmd -> while .)
    TERMINO         reduce using rule 7 (cmd -> while .)
    FIM             reduce using rule 7 (cmd -> while .)
    ELSE            reduce using rule 7 (cmd -> while .)
    DPAREN          reduce using rule 7 (cmd -> while .)


state 14

    (8) cmd -> if .

    ENQUANTO        reduce using rule 8 (cmd -> if .)
    IF              reduce using rule 8 (cmd -> if .)
    EVAL            reduce using rule 8 (cmd -> if .)
    ZERO            reduce using rule 8 (cmd -> if .)
    ID              reduce using rule 8 (cmd -> if .)
    NUMERO          reduce using rule 8 (cmd -> if .)
    TERMINO         reduce using rule 8 (cmd -> if .)
    FIM             reduce using rule 8 (cmd -> if .)
    ELSE            reduce using rule 8 (cmd -> if .)
    DPAREN          reduce using rule 8 (cmd -> if .)


state 15

    (9) cmd -> ifelse .

    ENQUANTO        reduce using rule 9 (cmd -> ifelse .)
    IF              reduce using rule 9 (cmd -> ifelse .)
    EVAL            reduce using rule 9 (cmd -> ifelse .)
    ZERO            reduce using rule 9 (cmd -> ifelse .)
    ID              reduce using rule 9 (cmd -> ifelse .)
    NUMERO          reduce using rule 9 (cmd -> ifelse .)
    TERMINO         reduce using rule 9 (cmd -> ifelse .)
    FIM             reduce using rule 9 (cmd -> ifelse .)
    ELSE            reduce using rule 9 (cmd -> ifelse .)
    DPAREN          reduce using rule 9 (cmd -> ifelse .)


state 16

    (10) cmd -> eval .

    ENQUANTO        reduce using rule 10 (cmd -> eval .)
    IF              reduce using rule 10 (cmd -> eval .)
    EVAL            reduce using rule 10 (cmd -> eval .)
    ZERO            reduce using rule 10 (cmd -> eval .)
    ID              reduce using rule 10 (cmd -> eval .)
    NUMERO          reduce using rule 10 (cmd -> eval .)
    TERMINO         reduce using rule 10 (cmd -> eval .)
    FIM             reduce using rule 10 (cmd -> eval .)
    ELSE            reduce using rule 10 (cmd -> eval .)
    DPAREN          reduce using rule 10 (cmd -> eval .)


state 17

    (11) cmd -> zero .

    ENQUANTO        reduce using rule 11 (cmd -> zero .)
    IF              reduce using rule 11 (cmd -> zero .)
    EVAL            reduce using rule 11 (cmd -> zero .)
    ZERO            reduce using rule 11 (cmd -> zero .)
    ID              reduce using rule 11 (cmd -> zero .)
    NUMERO          reduce using rule 11 (cmd -> zero .)
    TERMINO         reduce using rule 11 (cmd -> zero .)
    FIM             reduce using rule 11 (cmd -> zero .)
    ELSE            reduce using rule 11 (cmd -> zero .)
    DPAREN          reduce using rule 11 (cmd -> zero .)


state 18

    (12) cmd -> soma .

    ENQUANTO        reduce using rule 12 (cmd -> soma .)
    IF              reduce using rule 12 (cmd -> soma .)
    EVAL            reduce using rule 12 (cmd -> soma .)
    ZERO            reduce using rule 12 (cmd -> soma .)
    ID              reduce using rule 12 (cmd -> soma .)
    NUMERO          reduce using rule 12 (cmd -> soma .)
    TERMINO         reduce using rule 12 (cmd -> soma .)
    FIM             reduce using rule 12 (cmd -> soma .)
    ELSE            reduce using rule 12 (cmd -> soma .)
    DPAREN          reduce using rule 12 (cmd -> soma .)


state 19

    (13) cmd -> mult .

    ENQUANTO        reduce using rule 13 (cmd -> mult .)
    IF              reduce using rule 13 (cmd -> mult .)
    EVAL            reduce using rule 13 (cmd -> mult .)
    ZERO            reduce using rule 13 (cmd -> mult .)
    ID              reduce using rule 13 (cmd -> mult .)
    NUMERO          reduce using rule 13 (cmd -> mult .)
    TERMINO         reduce using rule 13 (cmd -> mult .)
    FIM             reduce using rule 13 (cmd -> mult .)
    ELSE            reduce using rule 13 (cmd -> mult .)
    DPAREN          reduce using rule 13 (cmd -> mult .)


state 20

    (14) cmd -> atr .

    ENQUANTO        reduce using rule 14 (cmd -> atr .)
    IF              reduce using rule 14 (cmd -> atr .)
    EVAL            reduce using rule 14 (cmd -> atr .)
    ZERO            reduce using rule 14 (cmd -> atr .)
    ID              reduce using rule 14 (cmd -> atr .)
    NUMERO          reduce using rule 14 (cmd -> atr .)
    TERMINO         reduce using rule 14 (cmd -> atr .)
    FIM             reduce using rule 14 (cmd -> atr .)
    ELSE            reduce using rule 14 (cmd -> atr .)
    DPAREN          reduce using rule 14 (cmd -> atr .)


state 21

    (15) while -> ENQUANTO . ID FACA cmds FIM

    ID              shift and go to state 29


state 22

    (20) soma -> ID . SOMA expr
    (22) mult -> ID . MULT expr
    (28) atr -> ID . IGUAL expr

    SOMA            shift and go to state 30
    MULT            shift and go to state 31
    IGUAL           shift and go to state 32


state 23

    (16) if -> IF . ID THEN cmds FIM
    (17) ifelse -> IF . ID THEN cmds ELSE cmds FIM

    ID              shift and go to state 33


state 24

    (18) eval -> EVAL . EPAREN ID VIRGULA ID VIRGULA cmds DPAREN

    EPAREN          shift and go to state 34


state 25

    (19) zero -> ZERO . EPAREN ID DPAREN

    EPAREN          shift and go to state 35


state 26

    (21) soma -> NUMERO . SOMA expr
    (23) mult -> NUMERO . MULT expr

    SOMA            shift and go to state 36
    MULT            shift and go to state 37


state 27

    (1) programa -> INICIO varlist MONITOR monitorados EXECUTE cmds TERMINO .

    $end            reduce using rule 1 (programa -> INICIO varlist MONITOR monitorados EXECUTE cmds TERMINO .)


state 28

    (5) cmds -> cmd cmds .

    TERMINO         reduce using rule 5 (cmds -> cmd cmds .)
    FIM             reduce using rule 5 (cmds -> cmd cmds .)
    ELSE            reduce using rule 5 (cmds -> cmd cmds .)
    DPAREN          reduce using rule 5 (cmds -> cmd cmds .)


state 29

    (15) while -> ENQUANTO ID . FACA cmds FIM

    FACA            shift and go to state 38


state 30

    (20) soma -> ID SOMA . expr
    (24) expr -> . ID
    (25) expr -> . NUMERO
    (26) expr -> . soma
    (27) expr -> . mult
    (20) soma -> . ID SOMA expr
    (21) soma -> . NUMERO SOMA expr
    (22) mult -> . ID MULT expr
    (23) mult -> . NUMERO MULT expr

    ID              shift and go to state 39
    NUMERO          shift and go to state 41

    expr                           shift and go to state 40
    soma                           shift and go to state 42
    mult                           shift and go to state 43

state 31

    (22) mult -> ID MULT . expr
    (24) expr -> . ID
    (25) expr -> . NUMERO
    (26) expr -> . soma
    (27) expr -> . mult
    (20) soma -> . ID SOMA expr
    (21) soma -> . NUMERO SOMA expr
    (22) mult -> . ID MULT expr
    (23) mult -> . NUMERO MULT expr

    ID              shift and go to state 39
    NUMERO          shift and go to state 41

    expr                           shift and go to state 44
    soma                           shift and go to state 42
    mult                           shift and go to state 43

state 32

    (28) atr -> ID IGUAL . expr
    (24) expr -> . ID
    (25) expr -> . NUMERO
    (26) expr -> . soma
    (27) expr -> . mult
    (20) soma -> . ID SOMA expr
    (21) soma -> . NUMERO SOMA expr
    (22) mult -> . ID MULT expr
    (23) mult -> . NUMERO MULT expr

    ID              shift and go to state 39
    NUMERO          shift and go to state 41

    expr                           shift and go to state 45
    soma                           shift and go to state 42
    mult                           shift and go to state 43

state 33

    (16) if -> IF ID . THEN cmds FIM
    (17) ifelse -> IF ID . THEN cmds ELSE cmds FIM

    THEN            shift and go to state 46


state 34

    (18) eval -> EVAL EPAREN . ID VIRGULA ID VIRGULA cmds DPAREN

    ID              shift and go to state 47


state 35

    (19) zero -> ZERO EPAREN . ID DPAREN

    ID              shift and go to state 48


state 36

    (21) soma -> NUMERO SOMA . expr
    (24) expr -> . ID
    (25) expr -> . NUMERO
    (26) expr -> . soma
    (27) expr -> . mult
    (20) soma -> . ID SOMA expr
    (21) soma -> . NUMERO SOMA expr
    (22) mult -> . ID MULT expr
    (23) mult -> . NUMERO MULT expr

    ID              shift and go to state 39
    NUMERO          shift and go to state 41

    expr                           shift and go to state 49
    soma                           shift and go to state 42
    mult                           shift and go to state 43

state 37

    (23) mult -> NUMERO MULT . expr
    (24) expr -> . ID
    (25) expr -> . NUMERO
    (26) expr -> . soma
    (27) expr -> . mult
    (20) soma -> . ID SOMA expr
    (21) soma -> . NUMERO SOMA expr
    (22) mult -> . ID MULT expr
    (23) mult -> . NUMERO MULT expr

    ID              shift and go to state 39
    NUMERO          shift and go to state 41

    expr                           shift and go to state 50
    soma                           shift and go to state 42
    mult                           shift and go to state 43

state 38

    (15) while -> ENQUANTO ID FACA . cmds FIM
    (5) cmds -> . cmd cmds
    (6) cmds -> . cmd
    (7) cmd -> . while
    (8) cmd -> . if
    (9) cmd -> . ifelse
    (10) cmd -> . eval
    (11) cmd -> . zero
    (12) cmd -> . soma
    (13) cmd -> . mult
    (14) cmd -> . atr
    (15) while -> . ENQUANTO ID FACA cmds FIM
    (16) if -> . IF ID THEN cmds FIM
    (17) ifelse -> . IF ID THEN cmds ELSE cmds FIM
    (18) eval -> . EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN
    (19) zero -> . ZERO EPAREN ID DPAREN
    (20) soma -> . ID SOMA expr
    (21) soma -> . NUMERO SOMA expr
    (22) mult -> . ID MULT expr
    (23) mult -> . NUMERO MULT expr
    (28) atr -> . ID IGUAL expr

    ENQUANTO        shift and go to state 21
    IF              shift and go to state 23
    EVAL            shift and go to state 24
    ZERO            shift and go to state 25
    ID              shift and go to state 22
    NUMERO          shift and go to state 26

    cmds                           shift and go to state 51
    cmd                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14
    ifelse                         shift and go to state 15
    eval                           shift and go to state 16
    zero                           shift and go to state 17
    soma                           shift and go to state 18
    mult                           shift and go to state 19
    atr                            shift and go to state 20

state 39

    (24) expr -> ID .
    (20) soma -> ID . SOMA expr
    (22) mult -> ID . MULT expr

    ENQUANTO        reduce using rule 24 (expr -> ID .)
    IF              reduce using rule 24 (expr -> ID .)
    EVAL            reduce using rule 24 (expr -> ID .)
    ZERO            reduce using rule 24 (expr -> ID .)
    ID              reduce using rule 24 (expr -> ID .)
    NUMERO          reduce using rule 24 (expr -> ID .)
    TERMINO         reduce using rule 24 (expr -> ID .)
    FIM             reduce using rule 24 (expr -> ID .)
    ELSE            reduce using rule 24 (expr -> ID .)
    DPAREN          reduce using rule 24 (expr -> ID .)
    SOMA            shift and go to state 30
    MULT            shift and go to state 31


state 40

    (20) soma -> ID SOMA expr .

    ENQUANTO        reduce using rule 20 (soma -> ID SOMA expr .)
    IF              reduce using rule 20 (soma -> ID SOMA expr .)
    EVAL            reduce using rule 20 (soma -> ID SOMA expr .)
    ZERO            reduce using rule 20 (soma -> ID SOMA expr .)
    ID              reduce using rule 20 (soma -> ID SOMA expr .)
    NUMERO          reduce using rule 20 (soma -> ID SOMA expr .)
    TERMINO         reduce using rule 20 (soma -> ID SOMA expr .)
    FIM             reduce using rule 20 (soma -> ID SOMA expr .)
    ELSE            reduce using rule 20 (soma -> ID SOMA expr .)
    DPAREN          reduce using rule 20 (soma -> ID SOMA expr .)


state 41

    (25) expr -> NUMERO .
    (21) soma -> NUMERO . SOMA expr
    (23) mult -> NUMERO . MULT expr

    ENQUANTO        reduce using rule 25 (expr -> NUMERO .)
    IF              reduce using rule 25 (expr -> NUMERO .)
    EVAL            reduce using rule 25 (expr -> NUMERO .)
    ZERO            reduce using rule 25 (expr -> NUMERO .)
    ID              reduce using rule 25 (expr -> NUMERO .)
    NUMERO          reduce using rule 25 (expr -> NUMERO .)
    TERMINO         reduce using rule 25 (expr -> NUMERO .)
    FIM             reduce using rule 25 (expr -> NUMERO .)
    ELSE            reduce using rule 25 (expr -> NUMERO .)
    DPAREN          reduce using rule 25 (expr -> NUMERO .)
    SOMA            shift and go to state 36
    MULT            shift and go to state 37


state 42

    (26) expr -> soma .

    ENQUANTO        reduce using rule 26 (expr -> soma .)
    IF              reduce using rule 26 (expr -> soma .)
    EVAL            reduce using rule 26 (expr -> soma .)
    ZERO            reduce using rule 26 (expr -> soma .)
    ID              reduce using rule 26 (expr -> soma .)
    NUMERO          reduce using rule 26 (expr -> soma .)
    TERMINO         reduce using rule 26 (expr -> soma .)
    FIM             reduce using rule 26 (expr -> soma .)
    ELSE            reduce using rule 26 (expr -> soma .)
    DPAREN          reduce using rule 26 (expr -> soma .)


state 43

    (27) expr -> mult .

    ENQUANTO        reduce using rule 27 (expr -> mult .)
    IF              reduce using rule 27 (expr -> mult .)
    EVAL            reduce using rule 27 (expr -> mult .)
    ZERO            reduce using rule 27 (expr -> mult .)
    ID              reduce using rule 27 (expr -> mult .)
    NUMERO          reduce using rule 27 (expr -> mult .)
    TERMINO         reduce using rule 27 (expr -> mult .)
    FIM             reduce using rule 27 (expr -> mult .)
    ELSE            reduce using rule 27 (expr -> mult .)
    DPAREN          reduce using rule 27 (expr -> mult .)


state 44

    (22) mult -> ID MULT expr .

    ENQUANTO        reduce using rule 22 (mult -> ID MULT expr .)
    IF              reduce using rule 22 (mult -> ID MULT expr .)
    EVAL            reduce using rule 22 (mult -> ID MULT expr .)
    ZERO            reduce using rule 22 (mult -> ID MULT expr .)
    ID              reduce using rule 22 (mult -> ID MULT expr .)
    NUMERO          reduce using rule 22 (mult -> ID MULT expr .)
    TERMINO         reduce using rule 22 (mult -> ID MULT expr .)
    FIM             reduce using rule 22 (mult -> ID MULT expr .)
    ELSE            reduce using rule 22 (mult -> ID MULT expr .)
    DPAREN          reduce using rule 22 (mult -> ID MULT expr .)


state 45

    (28) atr -> ID IGUAL expr .

    ENQUANTO        reduce using rule 28 (atr -> ID IGUAL expr .)
    IF              reduce using rule 28 (atr -> ID IGUAL expr .)
    EVAL            reduce using rule 28 (atr -> ID IGUAL expr .)
    ZERO            reduce using rule 28 (atr -> ID IGUAL expr .)
    ID              reduce using rule 28 (atr -> ID IGUAL expr .)
    NUMERO          reduce using rule 28 (atr -> ID IGUAL expr .)
    TERMINO         reduce using rule 28 (atr -> ID IGUAL expr .)
    FIM             reduce using rule 28 (atr -> ID IGUAL expr .)
    ELSE            reduce using rule 28 (atr -> ID IGUAL expr .)
    DPAREN          reduce using rule 28 (atr -> ID IGUAL expr .)


state 46

    (16) if -> IF ID THEN . cmds FIM
    (17) ifelse -> IF ID THEN . cmds ELSE cmds FIM
    (5) cmds -> . cmd cmds
    (6) cmds -> . cmd
    (7) cmd -> . while
    (8) cmd -> . if
    (9) cmd -> . ifelse
    (10) cmd -> . eval
    (11) cmd -> . zero
    (12) cmd -> . soma
    (13) cmd -> . mult
    (14) cmd -> . atr
    (15) while -> . ENQUANTO ID FACA cmds FIM
    (16) if -> . IF ID THEN cmds FIM
    (17) ifelse -> . IF ID THEN cmds ELSE cmds FIM
    (18) eval -> . EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN
    (19) zero -> . ZERO EPAREN ID DPAREN
    (20) soma -> . ID SOMA expr
    (21) soma -> . NUMERO SOMA expr
    (22) mult -> . ID MULT expr
    (23) mult -> . NUMERO MULT expr
    (28) atr -> . ID IGUAL expr

    ENQUANTO        shift and go to state 21
    IF              shift and go to state 23
    EVAL            shift and go to state 24
    ZERO            shift and go to state 25
    ID              shift and go to state 22
    NUMERO          shift and go to state 26

    cmds                           shift and go to state 52
    cmd                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14
    ifelse                         shift and go to state 15
    eval                           shift and go to state 16
    zero                           shift and go to state 17
    soma                           shift and go to state 18
    mult                           shift and go to state 19
    atr                            shift and go to state 20

state 47

    (18) eval -> EVAL EPAREN ID . VIRGULA ID VIRGULA cmds DPAREN

    VIRGULA         shift and go to state 53


state 48

    (19) zero -> ZERO EPAREN ID . DPAREN

    DPAREN          shift and go to state 54


state 49

    (21) soma -> NUMERO SOMA expr .

    ENQUANTO        reduce using rule 21 (soma -> NUMERO SOMA expr .)
    IF              reduce using rule 21 (soma -> NUMERO SOMA expr .)
    EVAL            reduce using rule 21 (soma -> NUMERO SOMA expr .)
    ZERO            reduce using rule 21 (soma -> NUMERO SOMA expr .)
    ID              reduce using rule 21 (soma -> NUMERO SOMA expr .)
    NUMERO          reduce using rule 21 (soma -> NUMERO SOMA expr .)
    TERMINO         reduce using rule 21 (soma -> NUMERO SOMA expr .)
    FIM             reduce using rule 21 (soma -> NUMERO SOMA expr .)
    ELSE            reduce using rule 21 (soma -> NUMERO SOMA expr .)
    DPAREN          reduce using rule 21 (soma -> NUMERO SOMA expr .)


state 50

    (23) mult -> NUMERO MULT expr .

    ENQUANTO        reduce using rule 23 (mult -> NUMERO MULT expr .)
    IF              reduce using rule 23 (mult -> NUMERO MULT expr .)
    EVAL            reduce using rule 23 (mult -> NUMERO MULT expr .)
    ZERO            reduce using rule 23 (mult -> NUMERO MULT expr .)
    ID              reduce using rule 23 (mult -> NUMERO MULT expr .)
    NUMERO          reduce using rule 23 (mult -> NUMERO MULT expr .)
    TERMINO         reduce using rule 23 (mult -> NUMERO MULT expr .)
    FIM             reduce using rule 23 (mult -> NUMERO MULT expr .)
    ELSE            reduce using rule 23 (mult -> NUMERO MULT expr .)
    DPAREN          reduce using rule 23 (mult -> NUMERO MULT expr .)


state 51

    (15) while -> ENQUANTO ID FACA cmds . FIM

    FIM             shift and go to state 55


state 52

    (16) if -> IF ID THEN cmds . FIM
    (17) ifelse -> IF ID THEN cmds . ELSE cmds FIM

    FIM             shift and go to state 56
    ELSE            shift and go to state 57


state 53

    (18) eval -> EVAL EPAREN ID VIRGULA . ID VIRGULA cmds DPAREN

    ID              shift and go to state 58


state 54

    (19) zero -> ZERO EPAREN ID DPAREN .

    ENQUANTO        reduce using rule 19 (zero -> ZERO EPAREN ID DPAREN .)
    IF              reduce using rule 19 (zero -> ZERO EPAREN ID DPAREN .)
    EVAL            reduce using rule 19 (zero -> ZERO EPAREN ID DPAREN .)
    ZERO            reduce using rule 19 (zero -> ZERO EPAREN ID DPAREN .)
    ID              reduce using rule 19 (zero -> ZERO EPAREN ID DPAREN .)
    NUMERO          reduce using rule 19 (zero -> ZERO EPAREN ID DPAREN .)
    TERMINO         reduce using rule 19 (zero -> ZERO EPAREN ID DPAREN .)
    FIM             reduce using rule 19 (zero -> ZERO EPAREN ID DPAREN .)
    ELSE            reduce using rule 19 (zero -> ZERO EPAREN ID DPAREN .)
    DPAREN          reduce using rule 19 (zero -> ZERO EPAREN ID DPAREN .)


state 55

    (15) while -> ENQUANTO ID FACA cmds FIM .

    ENQUANTO        reduce using rule 15 (while -> ENQUANTO ID FACA cmds FIM .)
    IF              reduce using rule 15 (while -> ENQUANTO ID FACA cmds FIM .)
    EVAL            reduce using rule 15 (while -> ENQUANTO ID FACA cmds FIM .)
    ZERO            reduce using rule 15 (while -> ENQUANTO ID FACA cmds FIM .)
    ID              reduce using rule 15 (while -> ENQUANTO ID FACA cmds FIM .)
    NUMERO          reduce using rule 15 (while -> ENQUANTO ID FACA cmds FIM .)
    TERMINO         reduce using rule 15 (while -> ENQUANTO ID FACA cmds FIM .)
    FIM             reduce using rule 15 (while -> ENQUANTO ID FACA cmds FIM .)
    ELSE            reduce using rule 15 (while -> ENQUANTO ID FACA cmds FIM .)
    DPAREN          reduce using rule 15 (while -> ENQUANTO ID FACA cmds FIM .)


state 56

    (16) if -> IF ID THEN cmds FIM .

    ENQUANTO        reduce using rule 16 (if -> IF ID THEN cmds FIM .)
    IF              reduce using rule 16 (if -> IF ID THEN cmds FIM .)
    EVAL            reduce using rule 16 (if -> IF ID THEN cmds FIM .)
    ZERO            reduce using rule 16 (if -> IF ID THEN cmds FIM .)
    ID              reduce using rule 16 (if -> IF ID THEN cmds FIM .)
    NUMERO          reduce using rule 16 (if -> IF ID THEN cmds FIM .)
    TERMINO         reduce using rule 16 (if -> IF ID THEN cmds FIM .)
    FIM             reduce using rule 16 (if -> IF ID THEN cmds FIM .)
    ELSE            reduce using rule 16 (if -> IF ID THEN cmds FIM .)
    DPAREN          reduce using rule 16 (if -> IF ID THEN cmds FIM .)


state 57

    (17) ifelse -> IF ID THEN cmds ELSE . cmds FIM
    (5) cmds -> . cmd cmds
    (6) cmds -> . cmd
    (7) cmd -> . while
    (8) cmd -> . if
    (9) cmd -> . ifelse
    (10) cmd -> . eval
    (11) cmd -> . zero
    (12) cmd -> . soma
    (13) cmd -> . mult
    (14) cmd -> . atr
    (15) while -> . ENQUANTO ID FACA cmds FIM
    (16) if -> . IF ID THEN cmds FIM
    (17) ifelse -> . IF ID THEN cmds ELSE cmds FIM
    (18) eval -> . EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN
    (19) zero -> . ZERO EPAREN ID DPAREN
    (20) soma -> . ID SOMA expr
    (21) soma -> . NUMERO SOMA expr
    (22) mult -> . ID MULT expr
    (23) mult -> . NUMERO MULT expr
    (28) atr -> . ID IGUAL expr

    ENQUANTO        shift and go to state 21
    IF              shift and go to state 23
    EVAL            shift and go to state 24
    ZERO            shift and go to state 25
    ID              shift and go to state 22
    NUMERO          shift and go to state 26

    cmds                           shift and go to state 59
    cmd                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14
    ifelse                         shift and go to state 15
    eval                           shift and go to state 16
    zero                           shift and go to state 17
    soma                           shift and go to state 18
    mult                           shift and go to state 19
    atr                            shift and go to state 20

state 58

    (18) eval -> EVAL EPAREN ID VIRGULA ID . VIRGULA cmds DPAREN

    VIRGULA         shift and go to state 60


state 59

    (17) ifelse -> IF ID THEN cmds ELSE cmds . FIM

    FIM             shift and go to state 61


state 60

    (18) eval -> EVAL EPAREN ID VIRGULA ID VIRGULA . cmds DPAREN
    (5) cmds -> . cmd cmds
    (6) cmds -> . cmd
    (7) cmd -> . while
    (8) cmd -> . if
    (9) cmd -> . ifelse
    (10) cmd -> . eval
    (11) cmd -> . zero
    (12) cmd -> . soma
    (13) cmd -> . mult
    (14) cmd -> . atr
    (15) while -> . ENQUANTO ID FACA cmds FIM
    (16) if -> . IF ID THEN cmds FIM
    (17) ifelse -> . IF ID THEN cmds ELSE cmds FIM
    (18) eval -> . EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN
    (19) zero -> . ZERO EPAREN ID DPAREN
    (20) soma -> . ID SOMA expr
    (21) soma -> . NUMERO SOMA expr
    (22) mult -> . ID MULT expr
    (23) mult -> . NUMERO MULT expr
    (28) atr -> . ID IGUAL expr

    ENQUANTO        shift and go to state 21
    IF              shift and go to state 23
    EVAL            shift and go to state 24
    ZERO            shift and go to state 25
    ID              shift and go to state 22
    NUMERO          shift and go to state 26

    cmds                           shift and go to state 62
    cmd                            shift and go to state 12
    while                          shift and go to state 13
    if                             shift and go to state 14
    ifelse                         shift and go to state 15
    eval                           shift and go to state 16
    zero                           shift and go to state 17
    soma                           shift and go to state 18
    mult                           shift and go to state 19
    atr                            shift and go to state 20

state 61

    (17) ifelse -> IF ID THEN cmds ELSE cmds FIM .

    ENQUANTO        reduce using rule 17 (ifelse -> IF ID THEN cmds ELSE cmds FIM .)
    IF              reduce using rule 17 (ifelse -> IF ID THEN cmds ELSE cmds FIM .)
    EVAL            reduce using rule 17 (ifelse -> IF ID THEN cmds ELSE cmds FIM .)
    ZERO            reduce using rule 17 (ifelse -> IF ID THEN cmds ELSE cmds FIM .)
    ID              reduce using rule 17 (ifelse -> IF ID THEN cmds ELSE cmds FIM .)
    NUMERO          reduce using rule 17 (ifelse -> IF ID THEN cmds ELSE cmds FIM .)
    TERMINO         reduce using rule 17 (ifelse -> IF ID THEN cmds ELSE cmds FIM .)
    FIM             reduce using rule 17 (ifelse -> IF ID THEN cmds ELSE cmds FIM .)
    ELSE            reduce using rule 17 (ifelse -> IF ID THEN cmds ELSE cmds FIM .)
    DPAREN          reduce using rule 17 (ifelse -> IF ID THEN cmds ELSE cmds FIM .)


state 62

    (18) eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds . DPAREN

    DPAREN          shift and go to state 63


state 63

    (18) eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN .

    ENQUANTO        reduce using rule 18 (eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN .)
    IF              reduce using rule 18 (eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN .)
    EVAL            reduce using rule 18 (eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN .)
    ZERO            reduce using rule 18 (eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN .)
    ID              reduce using rule 18 (eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN .)
    NUMERO          reduce using rule 18 (eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN .)
    TERMINO         reduce using rule 18 (eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN .)
    FIM             reduce using rule 18 (eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN .)
    ELSE            reduce using rule 18 (eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN .)
    DPAREN          reduce using rule 18 (eval -> EVAL EPAREN ID VIRGULA ID VIRGULA cmds DPAREN .)

